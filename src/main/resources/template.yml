AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  user-management-system

  Sample SAM Template for user-management-system

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 20
    MemorySize: 128

Resources:
  UserHandler:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: UserFunction
      FunctionName: userHandler
      Handler: com.learnings.self.handlers.UsersHandler::handleRequest
      Runtime: java11
      Architectures:
        - x86_64
      MemorySize: 512
      Environment: # More info about Env Vars: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#environment-object
        Variables:
          PARAM1: VALUE
          JAVA_TOOL_OPTIONS: -XX:+TieredCompilation -XX:TieredStopAtLevel=1 # More info about tiered compilation https://aws.amazon.com/blogs/compute/optimizing-aws-lambda-function-performance-for-java/
          ES_ENDPOINT: !GetAtt UserElasticSearchDomain.DomainEndpoint
      Events:
        HelloWorld:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /{proxy+}
            Method: ANY
      Role:
        Fn::GetAtt:
          - UserHandlerRole
          - Arn
  UserHandlerRole:
    Type: "AWS::IAM::Role"
    Properties:
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/service-role/AWSLambdaDynamoDBExecutionRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service:
              - lambda.amazonaws.com
              - sqs.amazonaws.com
      Policies:
        - PolicyName: "DynamodbAccess"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "dynamodb:*"
                Resource: "*"
        - PolicyName: "ElasticSearchAccess"
          PolicyDocument:
            Statement:
              - Effect: "Allow"
                Action:
                  - "es:*"
                Resource: "*"
  UserTable:
    Type: "AWS::DynamoDB::Table"
    Description: "To Store User Data"
    Properties:
      TableName: "UserTable"
      AttributeDefinitions:
        - AttributeName: "userId"
          AttributeType: "S"
        - AttributeName: "emailAddress"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "userId"
          KeyType: "HASH"
      GlobalSecondaryIndexes:
        - IndexName: "emailAddressIndex"
          KeySchema:
            - AttributeName: "emailAddress"
              KeyType: "HASH"
          Projection:
            ProjectionType: "ALL"
      StreamSpecification:
        StreamViewType: NEW_IMAGE
      BillingMode: PAY_PER_REQUEST
  UserElasticSearchDomain:
    Type: AWS::Elasticsearch::Domain
    Properties:
      DomainName: user-mgmt-es-domain
      ElasticsearchVersion: 7.10
      ElasticsearchClusterConfig:
        InstanceType: t2.small.elasticsearch
        InstanceCount: 1
      EBSOptions:
        EBSEnabled: true
        VolumeSize: 10